name: Deploy Jekyll 4.x site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          working-directory: ./src/docs
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      
      - name: Create output directory
        run: mkdir -p docs
      
      - name: Verify Jekyll setup
        run: |
          cd src/docs
          echo "Jekyll version:"
          bundle exec jekyll --version
          echo "Ruby version:"
          ruby --version
          echo "Bundler version:"
          bundle --version
      
      - name: Build with Jekyll
        run: |
          cd src/docs
          bundle exec jekyll build --destination ../../docs --baseurl "${{ steps.pages.outputs.base_path }}" --verbose
        env:
          JEKYLL_ENV: production
      
      - name: Verify build output
        run: |
          echo "Build output directory contents:"
          ls -la docs/
          echo "Assets directory:"
          ls -la docs/assets/ || echo "No assets directory"
          echo "Logo file exists:"
          ls -la docs/assets/logo.svg || echo "Logo not found"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 