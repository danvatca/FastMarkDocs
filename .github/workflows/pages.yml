name: Deploy Jekyll 4.x site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          working-directory: ./src/docs
      - name: Setup Python for coverage
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install dependencies and generate coverage
        run: |
          poetry install --no-interaction
          poetry run python -m pytest tests/ -v --cov=fastmarkdocs --cov-report=html --cov-report=xml
          mkdir -p docs/coverage
          cp -r htmlcov/* docs/coverage/ 2>/dev/null || echo "No HTML coverage report found"
      - name: Verify Jekyll version
        run: |
          cd src/docs
          echo "Jekyll version:"
          bundle exec jekyll --version
          echo "Gem list:"
          bundle list | grep jekyll
        shell: bash
      - name: Build with Jekyll
        run: |
          cd src/docs
          mkdir -p ../../docs
          bundle exec jekyll build --destination ../../docs --verbose
        shell: bash
      - name: Create .nojekyll file
        run: touch docs/.nojekyll
      - name: Verify build output
        run: |
          echo "Build output directory contents:"
          ls -la docs/
          echo "Total size:"
          du -sh docs/
        shell: bash
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: ./docs

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 